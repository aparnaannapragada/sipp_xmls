<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">

<!-- This program is free software; you can redistribute it and/or      -->
<!-- modify it under the terms of the GNU General Public License as     -->
<!-- published by the Free Software Foundation; either version 2 of the -->
<!-- License, or (at your option) any later version.                    -->
<!--                                                                    -->
<!-- This program is distributed in the hope that it will be useful,    -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of     -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      -->
<!-- GNU General Public License for more details.                       -->
<!--                                                                    -->
<!-- You should have received a copy of the GNU General Public License  -->
<!-- along with this program; if not, write to the                      -->
<!-- Free Software Foundation, Inc.,                                    -->
<!-- 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA             -->
<!--                                                                    -->
<!--                 Sipp default 'uas' scenario.                       -->
<!--                                                                    -->

<scenario name="Basic UAS responder">
  <!-- By adding rrs="true" (Record Route Sets), the route sets         -->
  <!-- are saved and used for following messages sent. Useful to test   -->
  <!-- against stateful SIP proxies/B2BUAs.                             -->
  <recv request="INVITE" crlf="true">
  </recv>

  <send>
    <![CDATA[

      SIP/2.0 100 Trying
      [last_Via:]
      [last_From:]
      [last_To:]
      [last_Call-ID:]
      [last_CSeq:]
      Content-Length: 0

    ]]>
  </send>
  
  <pause milliseconds="500"/>
  <send>
    <![CDATA[

      SIP/2.0 180 Ringing
      [last_Via:]
      [last_From:]
      [last_To:];tag=[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      Contact: <sip:[local_ip]:[local_port];transport=[transport]>
      Content-Length: 0

    ]]>
  </send>
  
  <pause milliseconds="1000"/>
  <send retrans="500">
    <![CDATA[

      SIP/2.0 200 OK
      [last_Via:]
      [last_From:]
      [last_To:];tag=[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      Allow: INVITE, OPTIONS, BYE, CANCEL, ACK, PRACK, UPDATE, REFER, SUBSCRIBE, NOTIFY, INFO, REGISTER
      Contact: <sip:[local_ip]:[local_port];transport=[transport]>
      Content-Type: application/sdp
      Content-Length: [len]

      v=0
      o=sipp 2000 1 IN IP[local_ip_type] [local_ip]
      s=SIP Call
      c=IN IP[media_ip_type] [media_ip]
      t=0 0
      m=audio [media_port] RTP/AVP 0 
      a=rtpmap:0 PCMU/8000
      a=ptime:20

    ]]>
  </send>

  <recv request="ACK" rtd="true" crlf="true">
     <action>
     <ereg regexp=".*" 
      search_in="hdr" 
      header="Call-ID:" 
      check_it="true" 
      assign_to="14"/>
     <ereg regexp="tag=[0-9A-Z-]+" 
      search_in="hdr" 
      header="To:" 
      check_it="true" 
      assign_to="12"/>
     <ereg regexp="tag=[0-9A-Z-]+" 
      search_in="hdr" 
      header="From:" 
      check_it="true" 
      assign_to="13"/>
    </action>
  </recv>

  <nop>
     <action>
     <exec play_pcap_audio="/home/test/Hindi-asm.pcap"/>
     </action>
  </nop>


  <pause milliseconds="30000"/>
    <send retrans="500">
    <![CDATA[

       REFER sip:[transfer_to]@[remote_ip]:[remote_port] SIP/2.0
       Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
       From: [service]<sip:[service]@[local_ip]:[local_port]>;[$12]
       To: sut <sip:[caller_num]@[remote_ip]:[remote_port]>;[$13]
       Call-ID: [$14]
       CSeq: 102 REFER
       Contact: sip:[service]@[local_ip]:[local_port]
       Max-Forwards: 70
       Subject: Performance Test
       Refer-To: <sip:[transfer_to]@[remote_ip]>
       Referred-By: <sip:[service]@[local_ip]>
       Content-Length: 0

    ]]>
    </send>

    <recv response="202" rtd="true">
    </recv>

    <recv request="NOTIFY" rtd="true">
    </recv>


     <send>
       <![CDATA[

         SIP/2.0 200 OK
         [last_Via:]
         [last_From:]
         [last_To:]
         [last_Call-ID:]
         [last_CSeq:]
         Content-Length: 0

      ]]>
    </send>

    <recv request="NOTIFY" rtd="true">
    </recv>


    <send>
      <![CDATA[

       SIP/2.0 200 OK
       [last_Via:]
       [last_From:]
       [last_To:]
       [last_Call-ID:]
       [last_CSeq:]
       Content-Length: 0

     ]]>
    </send>

    <recv request="NOTIFY" rtd="true">
    </recv>

    <send>
     <![CDATA[

       SIP/2.0 200 OK
       [last_Via:]
       [last_From:]
       [last_To:]
       [last_Call-ID:]
       [last_CSeq:]
       Content-Length: 0

    ]]>
   </send>


  <recv request="BYE" rtd="true">
  </recv>

  <send>
   <![CDATA[

     SIP/2.0 200 OK
     [last_Via:]
     [last_From:]
     [last_To:]
     [last_Call-ID:]
     [last_CSeq:]
     Content-Length: 0

  ]]>
  </send>

  <!-- Keep the call open for a while in case the 200 is lost to be     -->
  <!-- able to retransmit it if we receive the BYE again.               -->


  <!-- definition of the response time repartition table (unit is ms)   -->
  <ResponseTimeRepartition value="10, 20, 30, 40, 50, 100, 150, 200"/>

  <!-- definition of the call length repartition table (unit is ms)     -->
  <CallLengthRepartition value="10, 50, 100, 500, 1000, 5000, 10000"/>

</scenario>
